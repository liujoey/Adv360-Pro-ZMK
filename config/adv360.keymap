#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    quick-tap-ms = <175>;
    flavor = "hold-preferred";
};

&sk { quick-release; };

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <22 23 24 25 26 40 41 42 43 44 54 55 56 57 58 70 69 66 65 8 9 10 11 12 71 72 73 74 13 27 45 59>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <15 16 17 18 19 29 30 31 32 33 47 48 49 50 51 66 65 69 70 1 2 3 4 5 0 14 28 46 61 62 63 64>;
            hold-trigger-on-release;
        };

        sk_shift: sk_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_SHIFT";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            quick-tap-ms = <175>;
        };

        as: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            flavor = "tap-preferred";
        };

        hml_shift: hml_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            hold-trigger-key-positions = <22 23 24 25 26 40 41 42 43 44 54 55 56 57 58 8 9 10 11 12 71 72 73 74 13 27 45 59 69>;
            require-prior-idle-ms = <130>;
        };

        hmr_shift: hmr_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_SHIFT";
            bindings = <&kp>, <&mm_comma>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <15 16 17 18 19 29 30 31 32 33 47 48 49 50 51 1 2 3 4 5 0 14 28 46 61 62 63 64>;
            require-prior-idle-ms = <100>;
        };

        mm_comma: mm_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_COMMA";
            bindings = <&kp COMMA>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mm_period: mm_period {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_PERIOD";
            bindings = <&kp DOT>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hmr_mm: hmr_mm {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_MM";
            bindings = <&kp>, <&mm_period>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <15 16 17 18 19 29 30 31 32 33 47 48 49 50 51 66 65 69 70 1 2 3 4 5 0 14 28 46 61 62 63 64>;
            hold-trigger-on-release;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC          &kp N1               &kp N2                   &kp N3           &kp N4        &kp N5  &to 0                                                                      &mo 5            &kp N6    &kp N7        &kp N8               &kp N9                         &kp N0           &kp MINUS
&as LG(TAB) TAB  &kp Q                &kp L                    &kp D            &kp W         &kp Z   &kp CAPS                                                                   &none            &kp SEMI  &kp F         &kp O                &kp U                          &kp SLASH        &kp TAB
&kp LCTRL        &kp B                &kp R                    &kp T            &kp S         &kp G   &to 1      &kp LGUI      &kp LEFT_ALT      &kp LEFT_ALT  &kp RIGHT_GUI     &none            &kp Y     &kp H         &kp A                &kp E                          &kp J            &kp RCTRL
&kp LEFT_SHIFT   &hml LEFT_ALT N      &hml_shift LEFT_SHIFT X  &hml LEFT_GUI M  &hml LCTRL C  &kp V                            &kp HOME          &kp PG_UP                                        &kp K     &hmr RCTRL P  &hmr_mm RIGHT_GUI 0  &hmr_shift RIGHT_SHIFT PERIOD  &hmr LEFT_ALT I  &sk_shift RIGHT_SHIFT RIGHT_SHIFT
&mo 4            &as LG(GRAVE) GRAVE  &caps_word               &kp TILDE        &kp SLASH             &kp SPACE  &lt 2 DELETE  &kp END           &kp PG_DN     &mt LSHIFT ENTER  &lt 3 BACKSPACE            &kp ASTERISK  &kp PERIOD           &kp LC(LS(LEFT_ALT))           &kp SQT          &mo 4
            >;
        };

        gaming {
            bindings = <
&kp ESC  &kp N1          &kp N2  &kp N3  &kp N4  &kp N5  &to 0                                                       &trans    &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp N6   &kp TAB         &kp Q   &kp W   &kp E   &kp R   &trans                                                      &trans    &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp N7   &kp LCTRL       &kp A   &kp S   &kp D   &kp F   &trans     &kp LGUI      &kp LALT      &kp LALT   &kp RGUI  &trans    &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp APOS
&kp N8   &kp LEFT_SHIFT  &kp Z   &kp X   &kp C   &kp V                            &kp HOME      &kp PG_UP                      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 4    &kp GRAVE       &kp T   &kp G   &kp B           &kp SPACE  &kp LEFT_ALT  &kp END       &kp PG_DN  &kp RET   &kp BSPC          &trans  &trans     &kp LBKT  &kp RBKT  &mo 4
            >;
        };

        keypad {
            bindings = <
&trans  &trans        &trans          &trans        &trans      &trans  &trans                                      &mo 5   &kp CARET        &kp POUND      &kp DOLLAR        &kp PERCENT  &kp SLASH     &kp PIPE
&trans  &trans        &kp CARET       &kp UP        &kp DOLLAR  &trans  &none                                       &none   &kp TILDE        &kp N7         &kp N8            &kp N9       &kp ASTERISK  &kp K
&trans  &trans        &kp LEFT        &kp DOWN      &kp RIGHT   &trans  &none   &trans  &trans      &trans  &trans  &none   &kp COLON        &kp N4         &kp N5            &kp N6       &kp MINUS     &kp J
&trans  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LCTRL   &trans                  &trans      &trans                  &kp EXCLAMATION  &kp N1         &kp N2            &kp N3       &kp PLUS      &kp LS(G)
&trans  &trans        &trans          &trans        &trans              &trans  &trans  &trans      &trans  &trans  &kp N0                   &kp LESS_THAN  &kp GREATER_THAN  &kp PERIOD   &kp EQUAL     &kp AMPERSAND
            >;
        };

        symbol {
            bindings = <
&trans     &kp EXCLAMATION    &kp SQT               &kp DOUBLE_QUOTES      &kp BACKSLASH     &kp N         &trans                                               &trans  &trans    &trans     &trans         &trans           &trans        &trans
&kp CARET  &kp LESS_THAN      &kp PLUS              &kp MINUS              &kp GREATER_THAN  &kp DOLLAR    &trans                                               &trans  &trans    &trans     &trans         &trans           &trans        &trans
&kp TILDE  &kp LEFT_BRACKET   &kp EQUAL             &kp UNDERSCORE         &kp RIGHT_BRACE   &kp PERCENT   &trans  &kp DOT    &kp ASTERISK      &trans  &trans  &trans  &kp BSPC  &kp RET    &kp SEMI       &kp TAB          &kp DEL       &trans
&kp POUND  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp ASTERISK                     &trans            &trans                  &trans    &kp RCTRL  &kp RIGHT_GUI  &kp RIGHT_SHIFT  &kp LEFT_ALT  &trans
&trans     &kp GRAVE          &kp AMPERSAND         &kp PIPE               &kp AT_SIGN                     &trans  &kp COLON  &trans            &trans  &trans  &trans            &trans     &trans         &trans           &trans        &trans
            >;
        };

        fn {
            bindings = <
&trans  &trans        &trans          &trans        &trans     &trans  &to 0                                       &mo 5   &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans  &trans        &trans          &trans        &trans     &trans  &none                                       &none   &trans  &kp F7   &kp F8   &kp F9   &trans  &trans
&trans  &trans        &trans          &trans        &trans     &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &kp F4   &kp F5   &kp F6   &trans  &trans
&trans  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LCTRL  &trans                  &trans      &trans                  &trans  &kp F1   &kp F2   &kp F3   &trans  &trans
&trans  &trans        &trans          &trans        &trans             &trans  &trans  &trans      &trans  &trans  &trans          &trans   &trans   &trans   &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
